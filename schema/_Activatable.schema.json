{
  "$schema": "http://json-schema.org/draft-07/schema",
  "$id": "/_Activatable.schema.json",
  "definitions": {
    "Id": {
      "description": "The activatable entry's identifier. An unique, increasing integer.",
      "type": "integer",
      "minimum": 0
    },
    "Name": {
      "description": "The name of the activatable entry.",
      "type": "string",
      "minLength": 1
    },
    "NameInLibrary": {
      "description": "The full name of the entry as stated in the sources. Only use when `name`\nneeds to be different from full name for text generation purposes.",
      "type": "string",
      "minLength": 1
    },
    "Levels": {
      "description": "Number of available levels.",
      "type": "integer",
      "minimum": 2
    },
    "Maximum": {
      "description": "The number stating how often you can buy the entry. The **default** depends on\nthe entry type:\n\n- **Advantage:** `1` in all cases (as specified in the **Core Rules**)\n- **Disadvantage:** `1` in all cases (as specified in the **Core Rules**)\n- **Special Abilities:** `1` if no options can be selected, otherwise the\n  number of possible options\n\nThe maximum is only set if it differs from the defaults specified above.",
      "type": "integer",
      "minimum": 1
    },
    "SelectOptions": {
      "description": "Definitions for possible options for the activatable entry. They can either\nbe derived from entry categories or be defined explicitly. Both can happen as\nwell, but if there is an explicitly defined select option and a derived\nselect option has the same identifier (which may only happen if skill or\ncombat technique identifiers are used for explicit select options), the\nexplicit definition overwrites the derived option.\n\nNote that this is only a full definition of options for simple logic that can\nbe made explicit using the more detailed configuration for both derived\ncategories and explicit options. There are quite a few entries whose option\nlogic cannot be fully represented here, so that it needs to be implemented\nmanually.",
      "type": "object",
      "properties": {
        "derived": {
          "description": "An entry category with optional further configuration. All available\nentries from the specified categories will be included as separate select\noptions. You can also specify a set of groups that should only be\nincluded. Groups not mentioned will be excluded then.",
          "$ref": "#/definitions/CategoryOption"
        },
        "explicit": {
          "description": "A list of explicit select options. If the identifier has a specific type,\nits entry is the base of this select option, where values defined here\noverride values from the base. Define the `src` property if the options\nare not derived from the rules text of the advantage/disadvantage/special\nability but instead are listed in a separate block and/or on a separate\npage.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/ExplicitOption"
          },
          "minItems": 1
        }
      },
      "required": [],
      "minProperties": 1,
      "additionalProperties": false
    },
    "CategoryOption": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Blessings"
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Cantrips"
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "TradeSecrets"
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Scripts"
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "AnimalShapes"
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "ArcaneBardTraditions"
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "ArcaneDancerTraditions"
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "SexPractices"
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Races"
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Cultures"
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "BlessedTraditions"
            },
            "require_principles": {
              "description": "Should the principles (code) of the tradition be required to select the\nrespective tradition?",
              "const": true
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Elements"
            },
            "specific": {
              "description": "Only include entries with the listed identifiers.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "The element's identifier.",
                    "type": "integer",
                    "maximum": 6,
                    "minimum": 1
                  }
                },
                "required": [
                  "id"
                ],
                "additionalProperties": false
              },
              "minItems": 1,
              "uniqueItems": true
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Properties"
            },
            "require_knowledge": {
              "description": "Does each property require it's corresponding property knowledge?",
              "const": true
            },
            "require_minimum_spellworks_on": {
              "description": "Require a minimum number of spellworks of the respective property to be\non a minimum skill rating.",
              "type": "object",
              "properties": {
                "number": {
                  "description": "The minimum number of spellworks that need to be on the defined minimum\nskill rating.",
                  "type": "integer",
                  "minimum": 1
                },
                "value": {
                  "description": "The minimum skill rating the defined minimum number of spellworks need\nto be on.",
                  "type": "integer",
                  "minimum": 1
                }
              },
              "required": [
                "number",
                "value"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Aspects"
            },
            "require_knowledge": {
              "description": "Does each aspect require it's corresponding aspect knowledge?",
              "const": true
            },
            "use_master_of_suffix_as_name": {
              "description": "The generated name should be the *Master of (Aspect)* suffix for this\naspect instead of the aspect's name. If an aspect does not provide a\nsuffix (such as the General aspect), it is automatically excluded from\nthe list.",
              "const": true
            },
            "require_minimum_liturgies_on": {
              "description": "Require a minimum number of liturgies of the respective aspect to be on a\nminimum skill rating.",
              "type": "object",
              "properties": {
                "number": {
                  "description": "The minimum number of liturgies that need to be on the defined minimum\nskill rating.",
                  "type": "integer",
                  "minimum": 1
                },
                "value": {
                  "description": "The minimum skill rating the defined minimum number of liturgies need\nto be on.",
                  "type": "integer",
                  "minimum": 1
                }
              },
              "required": [
                "number",
                "value"
              ],
              "additionalProperties": false
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Diseases"
            },
            "use_half_level_as_ap_value": {
              "description": "Only convert half the disease level into the AP value.",
              "const": true
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Poisons"
            },
            "use_half_level_as_ap_value": {
              "description": "Only convert half the poison level into the AP value.",
              "const": true
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Languages"
            },
            "prerequisites": {
              "description": "Generate prerequisites for each entry of the category.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/OptionOptionPrerequisite"
              },
              "minItems": 1
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Skills"
            },
            "categories": {
              "description": "A list of skill categories.",
              "type": "array",
              "items": {
                "oneOf": [
                  {
                    "type": "object",
                    "properties": {
                      "tag": {
                        "const": "Skills"
                      },
                      "groups": {
                        "description": "Only include entries of the specified groups.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "The skill group's identifier.",
                              "type": "integer",
                              "maximum": 5,
                              "minimum": 1
                            }
                          },
                          "required": [
                            "id"
                          ],
                          "additionalProperties": false
                        },
                        "minItems": 1
                      },
                      "specific": {
                        "description": "Only include (`Intersection`) or exclude (`Difference`) specific\nskills.",
                        "type": "object",
                        "properties": {
                          "operation": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "tag": {
                                    "const": "Intersection"
                                  }
                                },
                                "required": [
                                  "tag"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "tag": {
                                    "const": "Difference"
                                  }
                                },
                                "required": [
                                  "tag"
                                ],
                                "additionalProperties": false
                              }
                            ]
                          },
                          "list": {
                            "description": "The list of specific skills.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "The skill's identifier.",
                                  "type": "integer",
                                  "maximum": 59,
                                  "minimum": 1
                                }
                              },
                              "required": [
                                "id"
                              ],
                              "additionalProperties": false
                            },
                            "minItems": 1,
                            "uniqueItems": true
                          }
                        },
                        "required": [
                          "operation",
                          "list"
                        ],
                        "additionalProperties": false
                      },
                      "skill_applications": {
                        "description": "Registers new applications, which get enabled once this entry is\nactivated with its respective select option. It specifies an\nentry-unique identifier, the skill it belongs to is derived from the\nselect option automatically. A translation can be left out if its\nname equals the name of the origin entry.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "The application's identifier. An entry-unique, increasing integer.",
                              "type": "integer",
                              "minimum": 1
                            },
                            "translations": {
                              "description": "All translations for the entry, identified by IETF language tag\n(BCP47).",
                              "type": "object",
                              "patternProperties": {
                                "^[a-z]{2}-[A-Z]{2}$": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "The name of the application if different from the activatable\nentry's\nname.",
                                      "type": "string",
                                      "minLength": 1
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "minProperties": 1,
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "id"
                          ],
                          "additionalProperties": false
                        },
                        "minItems": 1
                      },
                      "skill_uses": {
                        "description": "Registers uses, which get enabled once this entry is activated with\nits respective select option. It specifies an entry-unique\nidentifier, the skill it belongs to is derived from the select option\nautomatically. A translation can be left out if its name equals the\nname of the origin entry.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "The use's identifier. An entry-unique, increasing integer.",
                              "type": "integer",
                              "minimum": 1
                            },
                            "translations": {
                              "description": "All translations for the entry, identified by IETF language tag\n(BCP47).",
                              "type": "object",
                              "patternProperties": {
                                "^[a-z]{2}-[A-Z]{2}$": {
                                  "type": "object",
                                  "properties": {
                                    "name": {
                                      "description": "The name of the use if different from the activatable entry's\nname.",
                                      "type": "string",
                                      "minLength": 1
                                    }
                                  },
                                  "required": [
                                    "name"
                                  ],
                                  "additionalProperties": false
                                }
                              },
                              "minProperties": 1,
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "id"
                          ],
                          "additionalProperties": false
                        },
                        "minItems": 1
                      },
                      "prerequisites": {
                        "description": "Generate prerequisites for each entry of the category.",
                        "type": "array",
                        "items": {
                          "oneOf": [
                            {
                              "$ref": "#/definitions/OptionSkillSelfPrerequisite"
                            },
                            {
                              "$ref": "#/definitions/OptionOptionPrerequisite"
                            }
                          ]
                        },
                        "minItems": 1
                      }
                    },
                    "required": [
                      "tag"
                    ],
                    "additionalProperties": false
                  },
                  {
                    "type": "object",
                    "properties": {
                      "tag": {
                        "$ref": "#/definitions/SkillWithEnhancementsCategory"
                      },
                      "specific": {
                        "description": "Only include (`Intersection`) or exclude (`Difference`) specific\nentries.",
                        "type": "object",
                        "properties": {
                          "operation": {
                            "oneOf": [
                              {
                                "type": "object",
                                "properties": {
                                  "tag": {
                                    "const": "Intersection"
                                  }
                                },
                                "required": [
                                  "tag"
                                ],
                                "additionalProperties": false
                              },
                              {
                                "type": "object",
                                "properties": {
                                  "tag": {
                                    "const": "Difference"
                                  }
                                },
                                "required": [
                                  "tag"
                                ],
                                "additionalProperties": false
                              }
                            ]
                          },
                          "list": {
                            "description": "The list of specific entries.",
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "description": "The entry's identifier.",
                                  "type": "integer",
                                  "maximum": 59,
                                  "minimum": 1
                                }
                              },
                              "required": [
                                "id"
                              ],
                              "additionalProperties": false
                            },
                            "minItems": 1,
                            "uniqueItems": true
                          }
                        },
                        "required": [
                          "operation",
                          "list"
                        ],
                        "additionalProperties": false
                      },
                      "prerequisites": {
                        "description": "Generate prerequisites for each entry of the category.",
                        "type": "array",
                        "items": {
                          "oneOf": [
                            {
                              "$ref": "#/definitions/OptionSkillSelfPrerequisite"
                            },
                            {
                              "$ref": "#/definitions/OptionOptionPrerequisite"
                            }
                          ]
                        },
                        "minItems": 1
                      }
                    },
                    "required": [
                      "tag"
                    ],
                    "additionalProperties": false
                  }
                ]
              },
              "minItems": 1
            },
            "ap_value": {
              "description": "Generate AP values for each entry.",
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "tag": {
                      "description": "Derive the cost from the improvement cost of each entry.\n\nAP Value = Improvement Cost × `multiplier` + `offset`",
                      "const": "DerivedFromImprovementCost"
                    },
                    "multiplier": {
                      "description": "This number is multiplied with the improvement cost of the entry\n(A = 1 to D = 4).",
                      "type": "integer",
                      "minimum": 2
                    },
                    "offset": {
                      "description": "This number is added to the maybe multiplied improvement cost of the\nentry.",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "tag"
                  ],
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "tag": {
                      "const": "Fixed"
                    },
                    "map": {
                      "description": "A mapping of skill identifiers to their specific AP values.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "$ref": "./_Identifier.schema.json#/definitions/SkillIdentifier"
                          },
                          "ap_value": {
                            "description": "The AP value for the specified entry.",
                            "type": "integer",
                            "minimum": 1
                          }
                        },
                        "required": [
                          "id",
                          "ap_value"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "default": {
                      "description": "The default value of an entry. Used as a fallback if no value is\nfound in `list`.",
                      "type": "integer",
                      "minimum": 1
                    }
                  },
                  "required": [
                    "tag",
                    "map",
                    "default"
                  ],
                  "additionalProperties": false
                }
              ]
            }
          },
          "required": [
            "tag",
            "categories"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "CombatTechniques"
            },
            "categories": {
              "description": "A list of combat technique categories.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "tag": {
                    "$ref": "#/definitions/CombatTechniqueCategory"
                  },
                  "specific": {
                    "description": "Only include (`Intersection`) or exclude (`Difference`) specific\nentries.",
                    "type": "object",
                    "properties": {
                      "operation": {
                        "oneOf": [
                          {
                            "type": "object",
                            "properties": {
                              "tag": {
                                "const": "Intersection"
                              }
                            },
                            "required": [
                              "tag"
                            ],
                            "additionalProperties": false
                          },
                          {
                            "type": "object",
                            "properties": {
                              "tag": {
                                "const": "Difference"
                              }
                            },
                            "required": [
                              "tag"
                            ],
                            "additionalProperties": false
                          }
                        ]
                      },
                      "list": {
                        "description": "The list of specific entries.",
                        "type": "array",
                        "items": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "description": "The entry's identifier.",
                              "type": "integer",
                              "maximum": 59,
                              "minimum": 1
                            }
                          },
                          "required": [
                            "id"
                          ],
                          "additionalProperties": false
                        },
                        "minItems": 1,
                        "uniqueItems": true
                      }
                    },
                    "required": [
                      "operation",
                      "list"
                    ],
                    "additionalProperties": false
                  },
                  "prerequisites": {
                    "description": "Generate prerequisites for each entry of the category.",
                    "type": "array",
                    "items": {
                      "oneOf": [
                        {
                          "$ref": "#/definitions/OptionSkillSelfPrerequisite"
                        },
                        {
                          "$ref": "#/definitions/OptionOptionPrerequisite"
                        }
                      ]
                    },
                    "minItems": 1
                  }
                },
                "required": [
                  "tag"
                ],
                "additionalProperties": false
              },
              "minItems": 1
            },
            "ap_value": {
              "description": "Generate AP values for each entry.",
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "tag": {
                      "description": "Derive the cost from the improvement cost of each entry.\n\nAP Value = Improvement Cost × `multiplier` + `offset`",
                      "const": "DerivedFromImprovementCost"
                    },
                    "multiplier": {
                      "description": "This number is multiplied with the improvement cost of the entry\n(A = 1 to D = 4).",
                      "type": "integer",
                      "minimum": 2
                    },
                    "offset": {
                      "description": "This number is added to the maybe multiplied improvement cost of the\nentry.",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "tag"
                  ],
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "tag": {
                      "const": "Fixed"
                    },
                    "map": {
                      "description": "A mapping of skill identifiers to their specific AP values.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "$ref": "./_Identifier.schema.json#/definitions/CombatTechniqueIdentifier"
                          },
                          "ap_value": {
                            "description": "The AP value for the specified entry.",
                            "type": "integer",
                            "minimum": 1
                          }
                        },
                        "required": [
                          "id",
                          "ap_value"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "default": {
                      "description": "The default value of an entry. Used as a fallback if no value is\nfound in `list`.",
                      "type": "integer",
                      "minimum": 1
                    }
                  },
                  "required": [
                    "tag",
                    "map",
                    "default"
                  ],
                  "additionalProperties": false
                }
              ]
            }
          },
          "required": [
            "tag",
            "categories"
          ],
          "additionalProperties": false
        }
      ]
    },
    "SkillWithEnhancementsCategory": {
      "enum": [
        "Spells",
        "Rituals",
        "LiturgicalChants",
        "Ceremonies"
      ]
    },
    "CombatTechniqueCategory": {
      "enum": [
        "CloseCombatTechniques",
        "RangedCombatTechniques"
      ]
    },
    "OptionSkillSelfPrerequisite": {
      "type": "object",
      "properties": {
        "tag": {
          "const": "Self"
        },
        "value": {
          "description": "The entry requires itself on a certain Skill Rating.",
          "type": "integer",
          "minimum": 1
        }
      },
      "required": [
        "tag",
        "value"
      ],
      "additionalProperties": false
    },
    "OptionOptionPrerequisite": {
      "description": "The entry requires or prohibits itself as a select option of another entry.",
      "type": "object",
      "properties": {
        "tag": {
          "const": "SelectOption"
        },
        "id": {
          "description": "The target entry's identifier.",
          "$ref": "./_Identifier.schema.json#/definitions/ActivatableIdentifier"
        },
        "active": {
          "description": "Is the select option required (`true`) or prohibited (`false`)?",
          "type": "boolean"
        },
        "level": {
          "description": "The required level, if any.",
          "type": "integer",
          "minimum": 2
        }
      },
      "required": [
        "tag",
        "id",
        "active"
      ],
      "additionalProperties": false
    },
    "ExplicitOption": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "General"
            },
            "id": {
              "description": "The option's identifier. An unique, increasing integer.",
              "type": "integer",
              "minimum": 1
            },
            "profession_only": {
              "description": "Sometimes, professions use specific text selections that are not\ncontained in described lists. This ensures you can use them for\nprofessions only. They are not going to be displayed as options to the\nuser.",
              "const": true
            },
            "skill_applications": {
              "description": "Registers new applications, which get enabled once this entry is\nactivated with its respective select option. It specifies an entry-unique\nidentifier and the skill it belongs to. A translation can be left out if\nits name equals the name of the origin select option.",
              "$ref": "#/definitions/SkillApplications"
            },
            "skill_uses": {
              "description": "Registers uses, which get enabled once this entry is activated with its\nrespective select option. It specifies an entry-unique identifier and the\nskill it belongs to. A translation can be left out if its name equals the\nname of the origin select option.",
              "$ref": "#/definitions/SkillUses"
            },
            "prerequisites": {
              "$ref": "./_Prerequisite.schema.json#/definitions/GeneralPrerequisites"
            },
            "ap_value": {
              "description": "Specific AP cost for the select option.",
              "type": "integer",
              "minimum": 1
            },
            "src": {
              "$ref": "./source/_PublicationRef.schema.json#/definitions/PublicationRefs"
            },
            "translations": {
              "description": "All translations for the entry, identified by IETF language tag (BCP47).",
              "type": "object",
              "patternProperties": {
                "^[a-z]{2}-[A-Z]{2}$": {
                  "type": "object",
                  "properties": {
                    "name": {
                      "description": "The name of the select option.",
                      "type": "string",
                      "minLength": 1
                    },
                    "name_in_profession": {
                      "description": "The name of the select option when displayed in a generated\nprofession text.",
                      "type": "string",
                      "minLength": 1
                    },
                    "description": {
                      "description": "The description of the select option. Useful for Bad Habits, Trade\nSecrets and other entries where a description is available.",
                      "type": "string",
                      "minLength": 1
                    },
                    "errata": {
                      "$ref": "./source/_Erratum.schema.json#/definitions/Errata"
                    }
                  },
                  "required": [
                    "name"
                  ],
                  "additionalProperties": false
                }
              },
              "minProperties": 1,
              "additionalProperties": false
            }
          },
          "required": [
            "tag",
            "id",
            "translations"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Skill"
            },
            "id": {
              "description": "The skill's identifier. An unique, increasing integer.",
              "type": "integer",
              "minimum": 1
            },
            "skill_applications": {
              "description": "Registers new applications, which get enabled once this entry is\nactivated with its respective select option. It specifies an entry-unique\nidentifier and the skill it belongs to. A translation can be left out if\nits name equals the name of the origin select option.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "The application's identifier. An entry-unique, increasing integer.",
                    "type": "integer",
                    "minimum": 1
                  },
                  "translations": {
                    "description": "All translations for the entry, identified by IETF language tag (BCP47).",
                    "type": "object",
                    "patternProperties": {
                      "^[a-z]{2}-[A-Z]{2}$": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The name of the application if different from the activatable entry's\nname.",
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "minProperties": 1,
                    "additionalProperties": false
                  }
                },
                "required": [
                  "id"
                ],
                "additionalProperties": false
              },
              "minItems": 1
            },
            "skill_uses": {
              "description": "Registers uses, which get enabled once this entry is activated with its\nrespective select option. It specifies an entry-unique identifier and the\nskill it belongs to. A translation can be left out if its name equals the\nname of the origin select option.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "The use's identifier. An entry-unique, increasing integer.",
                    "type": "integer",
                    "minimum": 1
                  },
                  "translations": {
                    "description": "All translations for the entry, identified by IETF language tag (BCP47).",
                    "type": "object",
                    "patternProperties": {
                      "^[a-z]{2}-[A-Z]{2}$": {
                        "type": "object",
                        "properties": {
                          "name": {
                            "description": "The name of the use if different from the activatable entry's name.",
                            "type": "string",
                            "minLength": 1
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "additionalProperties": false
                      }
                    },
                    "minProperties": 1,
                    "additionalProperties": false
                  }
                },
                "required": [
                  "id"
                ],
                "additionalProperties": false
              },
              "minItems": 1
            },
            "prerequisites": {
              "$ref": "./_Prerequisite.schema.json#/definitions/GeneralPrerequisites"
            },
            "ap_value": {
              "description": "Specific AP cost for the select option.",
              "type": "integer",
              "minimum": 1
            },
            "src": {
              "$ref": "./source/_PublicationRef.schema.json#/definitions/PublicationRefs"
            },
            "translations": {
              "description": "All translations for the entry, identified by IETF language tag (BCP47).",
              "type": "object",
              "patternProperties": {
                "^[a-z]{2}-[A-Z]{2}$": {
                  "type": "object",
                  "properties": {
                    "errata": {
                      "$ref": "./source/_Erratum.schema.json#/definitions/Errata"
                    }
                  },
                  "required": [],
                  "minProperties": 1,
                  "additionalProperties": false
                }
              },
              "minProperties": 1,
              "additionalProperties": false
            }
          },
          "required": [
            "tag",
            "id"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "CombatTechnique"
            },
            "id": {
              "description": "The combat technique's identifier.",
              "$ref": "./_Identifier.schema.json#/definitions/CombatTechniqueIdentifier"
            },
            "prerequisites": {
              "$ref": "./_Prerequisite.schema.json#/definitions/GeneralPrerequisites"
            },
            "ap_value": {
              "description": "Specific AP cost for the select option.",
              "type": "integer",
              "minimum": 1
            },
            "src": {
              "$ref": "./source/_PublicationRef.schema.json#/definitions/PublicationRefs"
            },
            "translations": {
              "description": "All translations for the entry, identified by IETF language tag (BCP47).",
              "type": "object",
              "patternProperties": {
                "^[a-z]{2}-[A-Z]{2}$": {
                  "type": "object",
                  "properties": {
                    "errata": {
                      "$ref": "./source/_Erratum.schema.json#/definitions/Errata"
                    }
                  },
                  "required": [],
                  "minProperties": 1,
                  "additionalProperties": false
                }
              },
              "minProperties": 1,
              "additionalProperties": false
            }
          },
          "required": [
            "tag",
            "id"
          ],
          "additionalProperties": false
        }
      ]
    },
    "Rules": {
      "description": "The rule text.",
      "type": "string",
      "minLength": 1
    },
    "Effect": {
      "description": "The effect description.",
      "type": "string",
      "minLength": 1
    },
    "CombatSpecialAbilityType": {
      "description": "The definition of how the combat special ability can be used in combat.",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Passive"
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "BasicManeuver"
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "SpecialManeuver"
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        }
      ]
    },
    "SkillApplications": {
      "description": "Registers new skill applications, which get enabled once this entry is\nactivated. It specifies an entry-unique identifier and the skill it belongs\nto. A translation can be left out if its name equals the name of the origin\nactivatable entry.",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The application's identifier. An entry-unique, increasing integer.",
            "type": "integer",
            "minimum": 1
          },
          "skill": {
            "description": "The skill(s) this application belongs to.",
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "tag": {
                    "const": "Single"
                  },
                  "id": {
                    "description": "The referenced skill's identifier.",
                    "type": "integer",
                    "minimum": 1
                  }
                },
                "required": [
                  "tag",
                  "id"
                ],
                "additionalProperties": false
              },
              {
                "type": "object",
                "properties": {
                  "tag": {
                    "const": "Multiple"
                  },
                  "list": {
                    "description": "The skills this application belongs to.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "The referenced skill's identifier.",
                          "type": "integer",
                          "minimum": 1
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "additionalProperties": false
                    },
                    "minItems": 2
                  },
                  "required_skill_rating": {
                    "description": "If an application applies to multiple skills, it may need to ensure the\nrespective skill is on a certain skill rating if the activatable entry\ncannot ensure this prerequisite.",
                    "type": "integer",
                    "minimum": 1
                  }
                },
                "required": [
                  "tag",
                  "list"
                ],
                "additionalProperties": false
              }
            ]
          },
          "translations": {
            "description": "All translations for the entry, identified by IETF language tag (BCP47).",
            "type": "object",
            "patternProperties": {
              "^[a-z]{2}-[A-Z]{2}$": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The name of the application if different from the activatable entry's\nname.",
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "name"
                ],
                "additionalProperties": false
              }
            },
            "minProperties": 1,
            "additionalProperties": false
          }
        },
        "required": [
          "id",
          "skill"
        ],
        "additionalProperties": false
      },
      "minItems": 1
    },
    "SkillUses": {
      "description": "Registers uses, which get enabled once this entry is activated. It specifies\nan entry-unique identifier and the skill it belongs to. A translation can be\nleft out if its name equals the name of the origin activatable entry.",
      "type": "array",
      "items": {
        "type": "object",
        "properties": {
          "id": {
            "description": "The use's identifier. An entry-unique, increasing integer.",
            "type": "integer",
            "minimum": 1
          },
          "skill": {
            "description": "The skill(s) this use belongs to.",
            "oneOf": [
              {
                "type": "object",
                "properties": {
                  "tag": {
                    "const": "Single"
                  },
                  "id": {
                    "description": "The referenced skill's identifier.",
                    "type": "integer",
                    "minimum": 1
                  }
                },
                "required": [
                  "tag",
                  "id"
                ],
                "additionalProperties": false
              },
              {
                "type": "object",
                "properties": {
                  "tag": {
                    "const": "Multiple"
                  },
                  "list": {
                    "description": "The skills this use belongs to.",
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "description": "The referenced skill's identifier.",
                          "type": "integer",
                          "minimum": 1
                        }
                      },
                      "required": [
                        "id"
                      ],
                      "additionalProperties": false
                    },
                    "minItems": 2
                  }
                },
                "required": [
                  "tag",
                  "list"
                ],
                "additionalProperties": false
              }
            ]
          },
          "translations": {
            "description": "All translations for the entry, identified by IETF language tag (BCP47).",
            "type": "object",
            "patternProperties": {
              "^[a-z]{2}-[A-Z]{2}$": {
                "type": "object",
                "properties": {
                  "name": {
                    "description": "The name of the use if different from the activatable entry's name.",
                    "type": "string",
                    "minLength": 1
                  }
                },
                "required": [
                  "name"
                ],
                "additionalProperties": false
              }
            },
            "minProperties": 1,
            "additionalProperties": false
          }
        },
        "required": [
          "id",
          "skill"
        ],
        "additionalProperties": false
      },
      "minItems": 1
    },
    "Penalty": {
      "description": "The penalty the special ability gives when used.",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Single"
            },
            "value": {
              "description": "The penalty value.",
              "type": "integer"
            },
            "applies_to_parry": {
              "description": "Set to `true` if the penalty applies to the parry instead of the attack.",
              "const": true
            }
          },
          "required": [
            "tag",
            "value"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "ByHandedness"
            },
            "one_handed": {
              "description": "The penalty value for one-handed weapons.",
              "type": "integer"
            },
            "two_handed": {
              "description": "The penalty value for two-handed weapons.",
              "type": "integer"
            },
            "applies_to_parry": {
              "description": "Set to `true` if the penalty applies to the parry instead of the attack.",
              "const": true
            }
          },
          "required": [
            "tag",
            "one_handed",
            "two_handed"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "ByActivation"
            },
            "active": {
              "description": "The penalty value if the entry has been bought by the character.",
              "type": "integer"
            },
            "inactive": {
              "description": "The penalty value if the entry has not been bought by the character.",
              "type": "integer"
            },
            "applies_to_parry": {
              "description": "Set to `true` if the penalty applies to the parry instead of the attack.",
              "const": true
            }
          },
          "required": [
            "tag",
            "active",
            "inactive"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Selection"
            },
            "options": {
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "tag": {
                      "const": "Specific"
                    },
                    "list": {
                      "description": "The list of specific penalty options.",
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "value": {
                            "description": "The penalty value.",
                            "type": "integer"
                          }
                        },
                        "required": [
                          "value"
                        ],
                        "additionalProperties": false
                      },
                      "minItems": 2,
                      "uniqueItems": true
                    }
                  },
                  "required": [
                    "tag",
                    "list"
                  ],
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "tag": {
                      "const": "Range"
                    },
                    "minimum": {
                      "description": "The minimum penalty value.",
                      "type": "integer"
                    },
                    "maximum": {
                      "description": "The maximum penalty value.",
                      "type": "integer"
                    }
                  },
                  "required": [
                    "tag",
                    "minimum",
                    "maximum"
                  ],
                  "additionalProperties": false
                }
              ]
            }
          },
          "required": [
            "tag",
            "options"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "ByLevel"
            },
            "levels": {
              "description": "A continuous range of penalties for each level. The first element is the\npenalty for the first level, the second element is the penalty for the\nsecond level, and so on.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "value": {
                    "description": "The penalty value for this level.",
                    "type": "integer"
                  }
                },
                "required": [
                  "value"
                ],
                "additionalProperties": false
              },
              "minItems": 2
            },
            "external_id": {
              "description": "The identifier of the combat-related special ability of which the level\ndefines the penalty instead.",
              "$ref": "./_Identifier.schema.json#/definitions/CombatRelatedSpecialAbilityIdentifier"
            }
          },
          "required": [
            "tag",
            "levels"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "ByAttack"
            },
            "list": {
              "description": "A list of penalties for subsequent attacks. The first element is the\npenalty for the first attack, the second element is the penalty for the\nsecond attack, and so on. The order of the first element may be changed\nusing `initial_order`, so that e.g. if set to `2`, the first element is\nthe penalty for the second attack, the second element is the penalty for\nthe third attack, and so on.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "value": {
                    "description": "The penalty value for this order.",
                    "type": "integer"
                  }
                },
                "required": [
                  "value"
                ],
                "additionalProperties": false
              },
              "minItems": 1
            },
            "initial_order": {
              "description": "The order of the first element in the `list` of penalties.",
              "type": "number"
            },
            "attack_replacement": {
              "description": "Set if a predefined different word should be used instead of the word\n`attack` for display purposes.",
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "tag": {
                      "const": "Throw"
                    }
                  },
                  "required": [
                    "tag"
                  ],
                  "additionalProperties": false
                }
              ]
            }
          },
          "required": [
            "tag",
            "list"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "DependsOnHitZone"
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        }
      ]
    },
    "EnchantmentCost": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "ArcaneEnergyCost"
            },
            "ae_cost": {
              "$ref": "#/definitions/ArcaneEnergyCost"
            }
          },
          "required": [
            "tag",
            "ae_cost"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "BindingCost"
            },
            "binding_cost": {
              "$ref": "#/definitions/BindingCost"
            }
          },
          "required": [
            "tag",
            "binding_cost"
          ],
          "additionalProperties": false
        }
      ]
    },
    "ArcaneEnergyCost": {
      "description": "The AE Cost.",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Fixed"
            },
            "value": {
              "description": "The AE cost value.",
              "type": "integer",
              "minimum": 1
            },
            "is_permanent": {
              "description": "Set to `true` if the AE costs are permanent.",
              "const": true
            },
            "interval": {
              "description": "Specified if the AE cost `value` has to be paid for each time interval.",
              "$ref": "./_ActivatableSkill.schema.json#/definitions/Duration/UnitValue"
            },
            "per_level": {
              "description": "The AE cost are per level of the enchantment. It may either be displayed\nin a compressed way (e.g. `1 AE per level`) or in a verbose way (e.g. `1\nAE for level I; 2 AE for level II`).",
              "oneOf": [
                {
                  "type": "object",
                  "properties": {
                    "tag": {
                      "const": "Compressed"
                    }
                  },
                  "required": [
                    "tag"
                  ],
                  "additionalProperties": false
                },
                {
                  "type": "object",
                  "properties": {
                    "tag": {
                      "const": "Verbose"
                    }
                  },
                  "required": [
                    "tag"
                  ],
                  "additionalProperties": false
                }
              ]
            },
            "translations": {
              "description": "All translations for the entry, identified by IETF language tag\n(BCP47).",
              "type": "object",
              "patternProperties": {
                "^[a-z]{2}-[A-Z]{2}$": {
                  "type": "object",
                  "properties": {
                    "note": {
                      "description": "A note, appended to the generated string in parenthesis.",
                      "type": "object",
                      "properties": {
                        "default": {
                          "description": "The full note.",
                          "type": "string",
                          "minLength": 1
                        },
                        "compressed": {
                          "description": "A compressed note, if applicable. If not specified it should not\nbe displayed in small location.",
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "required": [
                        "default"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [],
                  "minProperties": 1,
                  "additionalProperties": false
                }
              },
              "minProperties": 1,
              "additionalProperties": false
            }
          },
          "required": [
            "tag",
            "value"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "PerCountable"
            },
            "value": {
              "description": "The AE cost value that has to be per a specific countable entity.",
              "type": "integer",
              "minimum": 1
            },
            "base_value": {
              "description": "If defined, in addition to the cost per entity you have to pay a flat\namount, regardless of the entity count.",
              "type": "integer",
              "minimum": 1
            },
            "translations": {
              "description": "All translations for the entry, identified by IETF language tag\n(BCP47).",
              "type": "object",
              "patternProperties": {
                "^[a-z]{2}-[A-Z]{2}$": {
                  "type": "object",
                  "properties": {
                    "per": {
                      "description": "The cost have to be per a specific countable entity, e.g. `8 AE per\nperson`.",
                      "type": "object",
                      "properties": {
                        "default": {
                          "description": "The full countable entity name.",
                          "type": "string",
                          "minLength": 1
                        },
                        "compressed": {
                          "description": "The compressed countable entity name.",
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "required": [
                        "default",
                        "compressed"
                      ],
                      "additionalProperties": false
                    },
                    "note": {
                      "description": "A note, appended to the generated string in parenthesis.",
                      "type": "object",
                      "properties": {
                        "default": {
                          "description": "The full note.",
                          "type": "string",
                          "minLength": 1
                        },
                        "compressed": {
                          "description": "A compressed note, if applicable. If not specified it should not\nbe displayed in small location.",
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "required": [
                        "default"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "per"
                  ],
                  "minProperties": 1,
                  "additionalProperties": false
                }
              },
              "minProperties": 1,
              "additionalProperties": false
            }
          },
          "required": [
            "tag",
            "value"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "ActivationAndHalfInterval"
            },
            "value": {
              "description": "The AE cost value that has to be payed for activation. Half of this value\nhas to be payed each interval.",
              "type": "integer",
              "minimum": 2,
              "multipleOf": 2
            },
            "interval": {
              "description": "The time interval for which the AE cost `value` has to be paid.",
              "$ref": "./_ActivatableSkill.schema.json#/definitions/Duration/UnitValue"
            }
          },
          "required": [
            "tag",
            "value",
            "interval"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Indefinite"
            },
            "modifier": {
              "description": "The indefinite AE cost may be modified by a certain value.",
              "type": "object",
              "properties": {
                "arithmetic": {
                  "description": "The arithmetic how to apply the `value` to the indefinite base value.",
                  "oneOf": [
                    {
                      "type": "object",
                      "properties": {
                        "tag": {
                          "const": "Add"
                        }
                      },
                      "required": [
                        "tag"
                      ],
                      "additionalProperties": false
                    },
                    {
                      "type": "object",
                      "properties": {
                        "tag": {
                          "const": "Multiply"
                        }
                      },
                      "required": [
                        "tag"
                      ],
                      "additionalProperties": false
                    }
                  ]
                },
                "value": {
                  "description": "The value that is applied to the indefinite base value using the\ndefined `arithmetic`.",
                  "type": "integer",
                  "minimum": 1
                }
              },
              "required": [
                "arithmetic",
                "value"
              ],
              "additionalProperties": false
            },
            "translations": {
              "description": "All translations for the entry, identified by IETF language tag (BCP47).",
              "type": "object",
              "patternProperties": {
                "^[a-z]{2}-[A-Z]{2}$": {
                  "type": "object",
                  "properties": {
                    "description": {
                      "description": "A description of where the cost come from.",
                      "type": "object",
                      "properties": {
                        "default": {
                          "description": "The full description of where the cost come from.",
                          "type": "string",
                          "minLength": 1
                        },
                        "compressed": {
                          "description": "A compressed description of where the cost come from for use in\nsmall areas (e.g. on character sheet).",
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "required": [
                        "default",
                        "compressed"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [
                    "description"
                  ],
                  "additionalProperties": false
                }
              },
              "minProperties": 1,
              "additionalProperties": false
            }
          },
          "required": [
            "tag",
            "modifier",
            "translations"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Disjunction"
            },
            "interval": {
              "description": "Specified if the selected AE cost option has to be paid for each time\ninterval.",
              "type": "object",
              "properties": {
                "value": {
                  "description": "The interval itself.",
                  "$ref": "./_ActivatableSkill.schema.json#/definitions/Duration/UnitValue"
                },
                "activation_value": {
                  "description": "The AE cost value for activation.",
                  "type": "integer",
                  "minimum": 1
                },
                "after_activation": {
                  "description": "Set to `true` if the action where the enchantment is casted does\n**not** as a part of the first interval that has to be payed, so that\nthe first interval payment needs to be done after the activation.\n\nThis works different than other sustained spells, since for them the\nend of the cast usually already counts as part of the first interval.",
                  "type": "boolean"
                }
              },
              "required": [
                "value",
                "activation_value",
                "after_activation"
              ],
              "additionalProperties": false
            },
            "options": {
              "description": "The possible AE cost values.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "value": {
                    "description": "A possible AE cost value.",
                    "type": "integer",
                    "minimum": 1
                  },
                  "translations": {
                    "description": "All translations for the entry, identified by IETF language tag\n(BCP47).",
                    "type": "object",
                    "patternProperties": {
                      "^[a-z]{2}-[A-Z]{2}$": {
                        "type": "object",
                        "properties": {
                          "note": {
                            "description": "A note, appended to the generated option string in parenthesis.",
                            "type": "object",
                            "properties": {
                              "default": {
                                "description": "The full note.",
                                "type": "string",
                                "minLength": 1
                              },
                              "compressed": {
                                "description": "A compressed note, if applicable. If not specified it should not\nbe displayed in small location.",
                                "type": "string",
                                "minLength": 1
                              }
                            },
                            "required": [
                              "default"
                            ],
                            "additionalProperties": false
                          }
                        },
                        "required": [],
                        "minProperties": 1,
                        "additionalProperties": false
                      }
                    },
                    "minProperties": 1,
                    "additionalProperties": false
                  }
                },
                "required": [
                  "value"
                ],
                "additionalProperties": false
              }
            }
          },
          "required": [
            "tag",
            "options"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "None"
            },
            "translations": {
              "description": "All translations for the entry, identified by IETF language tag\n(BCP47).",
              "type": "object",
              "patternProperties": {
                "^[a-z]{2}-[A-Z]{2}$": {
                  "type": "object",
                  "properties": {
                    "note": {
                      "description": "A note, appended to the generated string in parenthesis.",
                      "type": "object",
                      "properties": {
                        "default": {
                          "description": "The full note.",
                          "type": "string",
                          "minLength": 1
                        },
                        "compressed": {
                          "description": "A compressed note, if applicable. If not specified it should not\nbe displayed in small location.",
                          "type": "string",
                          "minLength": 1
                        }
                      },
                      "required": [
                        "default"
                      ],
                      "additionalProperties": false
                    }
                  },
                  "required": [],
                  "minProperties": 1,
                  "additionalProperties": false
                }
              },
              "minProperties": 1,
              "additionalProperties": false
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Variable"
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        }
      ]
    },
    "Volume": {
      "description": "The volume points the enchantment needs.",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Fixed"
            },
            "points": {
              "description": "The volume points.",
              "type": "integer",
              "minimum": 0
            }
          },
          "required": [
            "tag",
            "points"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "PerLevel"
            },
            "points": {
              "description": "The volume points per level.",
              "type": "integer",
              "minimum": 1
            }
          },
          "required": [
            "tag",
            "points"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "ByLevel"
            },
            "list": {
              "description": "The volume points for each level. The first element is the volume points\nfor the first level, the second element is the volume points for the\nsecond level, and so on.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "points": {
                    "description": "The volume points for this level.",
                    "type": "integer",
                    "minimum": 0
                  }
                },
                "required": [
                  "points"
                ],
                "additionalProperties": false
              },
              "minItems": 2
            }
          },
          "required": [
            "tag",
            "list"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Map"
            },
            "map": {
              "$ref": "#/definitions/VolumeMap"
            }
          },
          "required": [
            "tag",
            "map"
          ],
          "additionalProperties": false
        }
      ]
    },
    "VolumeMap": {
      "description": "A content that is `3/4/5 Points for Chimera, Daimonid, Golems, Undead /\nFairies, Ghosts / Demons, Elementals` may be respresented as the following\nmap:\n\n```yaml\noptions:\n  - points: 3\n    associated_options:\n      - id:\n          tag: General\n          value: # ...\n      # ...\n    translations:\n      en-US:\n        label: \"Chimera, Daimonid, Golems, Undead\"\n        label_standalone: \"Chimera/Daimonid/Golems/Undead\"\n  - points: 4\n    associated_options:\n      - id:\n          tag: General\n          value: # ...\n      # ...\n    translations:\n      en-US:\n        label: \"Fairies, Ghosts\"\n        label_standalone: \"Fairies/Ghosts\"\n  - points: 5\n    associated_options:\n      - id:\n          tag: General\n          value: # ...\n      # ...\n    translations:\n      en-US:\n        label: \"Demons, Elementals\"\n        label_standalone: \"Demons/Elementals\"\n```\n\nThis will generate the exact same string as seen above. The associated\noptions are not present in the example, but they link to the options the\nvolume specification is meant for.",
      "type": "object",
      "properties": {
        "options": {
          "description": "The possible costs and associated labels.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeMapOption"
          },
          "minItems": 2
        },
        "translations": {
          "description": "All translations for the entry, identified by IETF language tag (BCP47).",
          "type": "object",
          "patternProperties": {
            "^[a-z]{2}-[A-Z]{2}$": {
              "type": "object",
              "properties": {
                "list_prepend": {
                  "description": "Place a string between the `for` and the grouped map option labels.",
                  "type": "string"
                },
                "list_append": {
                  "description": "Place a string after the grouped map option labels.",
                  "type": "string"
                },
                "replacement": {
                  "description": "If the string from the book cannot be generated using the default\ngeneration technique, use this string. All options still need to be\ninserted propertly, since it may be used by in-game tools to provide a\nselection to players.",
                  "type": "string"
                }
              },
              "required": [],
              "additionalProperties": false
            }
          },
          "minProperties": 1,
          "additionalProperties": false
        }
      },
      "required": [
        "options"
      ],
      "additionalProperties": false
    },
    "VolumeMapOption": {
      "type": "object",
      "properties": {
        "points": {
          "description": "The full permanent AE cost value for this option.",
          "type": "integer",
          "minimum": 1
        },
        "associated_options": {
          "description": "Links to the options this volume specification is meant for.",
          "type": "array",
          "items": {
            "type": "object",
            "properties": {
              "id": {
                "description": "The option's identifier.",
                "$ref": "./_Identifier.schema.json#/definitions/VolumePointsOptionReferenceIdentifier"
              }
            },
            "required": [
              "id"
            ],
            "additionalProperties": false
          }
        },
        "translations": {
          "description": "All translations for the entry, identified by IETF language tag (BCP47).",
          "type": "object",
          "patternProperties": {
            "^[a-z]{2}-[A-Z]{2}$": {
              "type": "object",
              "properties": {
                "label": {
                  "description": "The description of the option for cost string generation.",
                  "type": "string",
                  "minLength": 1
                },
                "label_standalone": {
                  "description": "The description of the option if used standalone. Only used if\ndifferent from `label`.",
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "label"
              ],
              "additionalProperties": false
            }
          },
          "minProperties": 1,
          "additionalProperties": false
        }
      },
      "required": [
        "points",
        "associated_options"
      ],
      "additionalProperties": false
    },
    "BindingCost": {
      "description": "The binding cost for an enchantment.",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Fixed"
            },
            "permanent_value": {
              "description": "The permanent AE cost.",
              "type": "integer",
              "minimum": 1
            }
          },
          "required": [
            "tag",
            "permanent_value"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "PerLevel"
            },
            "permanent_value": {
              "description": "The permanent AE cost per level.",
              "type": "integer",
              "minimum": 1
            }
          },
          "required": [
            "tag",
            "permanent_value"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Map"
            },
            "map": {
              "$ref": "#/definitions/BindingCostMap"
            }
          },
          "required": [
            "tag",
            "map"
          ],
          "additionalProperties": false
        }
      ]
    },
    "BindingCostMap": {
      "description": "A content that is `2/4/8 permanent AE for spell-swords with the combat\ntechnique Daggers, Swords, or Two-Handed Swords` may be respresented as the\nfollowing map:\n\n```yaml\noptions:\n  - permanent_value: 2\n    translations:\n      en-US:\n        label: \"Daggers\"\n        label_standalone: \"Dagger\"\n  - permanent_value: 4\n    translations:\n      en-US:\n        label: \"Swords\"\n        label_standalone: \"Sword\"\n  - permanent_value: 8\n    translations:\n      en-US:\n        label: \"Two-Handed Swords\"\n        label_standalone: \"Two-Handed Sword\"\nlist_prepend: \"spell-swords with the combat technique\"\n```\n\nThis will generate the exact same string as seen above.",
      "type": "object",
      "properties": {
        "options": {
          "description": "The possible costs and associated labels.",
          "type": "array",
          "items": {
            "$ref": "#/definitions/VolumeMapOption"
          },
          "minItems": 2
        },
        "translations": {
          "description": "All translations for the entry, identified by IETF language tag (BCP47).",
          "type": "object",
          "patternProperties": {
            "^[a-z]{2}-[A-Z]{2}$": {
              "type": "object",
              "properties": {
                "list_prepend": {
                  "description": "Place a string between the `for` and the grouped map option labels.",
                  "type": "string"
                },
                "list_append": {
                  "description": "Place a string after the grouped map option labels.",
                  "type": "string"
                },
                "replacement": {
                  "description": "If the string from the book cannot be generated using the default\ngeneration technique, use this string. All options still need to be\ninserted propertly, since it may be used by in-game tools to provide a\nselection to players.",
                  "type": "string"
                }
              },
              "required": [],
              "additionalProperties": false
            }
          },
          "minProperties": 1,
          "additionalProperties": false
        }
      },
      "required": [
        "options"
      ],
      "additionalProperties": false
    },
    "BindingCostMapOption": {
      "type": "object",
      "properties": {
        "permanent_value": {
          "description": "The full permanent AE cost value for this option.",
          "type": "integer",
          "minimum": 1
        },
        "translations": {
          "description": "All translations for the entry, identified by IETF language tag (BCP47).",
          "type": "object",
          "patternProperties": {
            "^[a-z]{2}-[A-Z]{2}$": {
              "type": "object",
              "properties": {
                "label": {
                  "description": "The description of the option for cost string generation.",
                  "type": "string",
                  "minLength": 1
                },
                "label_standalone": {
                  "description": "The description of the option if used standalone. Only used if\ndifferent from `label`.",
                  "type": "string",
                  "minLength": 1
                }
              },
              "required": [
                "label"
              ],
              "additionalProperties": false
            }
          },
          "minProperties": 1,
          "additionalProperties": false
        }
      },
      "required": [
        "permanent_value"
      ],
      "additionalProperties": false
    },
    "Property": {
      "description": "The magic property's identifier. `DependingOnProperty` can only be used if\nthe special ability has an option to select a property.",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "DependingOnProperty"
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Fixed"
            },
            "id": {
              "description": "The property's identifier.",
              "type": "integer",
              "minimum": 1
            }
          },
          "required": [
            "tag",
            "id"
          ],
          "additionalProperties": false
        }
      ]
    },
    "Aspect": {
      "description": "The blessed aspect's identifier.",
      "type": "integer",
      "minimum": 1
    },
    "AdvancedSpecialAbility": {
      "description": "A reference to an advanced special ability.",
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "General"
            },
            "id": {
              "description": "The advanced special ability's numeric identifier.",
              "type": "integer",
              "minimum": 1
            }
          },
          "required": [
            "tag",
            "id"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "RestrictOptions"
            },
            "id": {
              "description": "The advanced special ability's numeric identifier.",
              "type": "integer",
              "minimum": 1
            },
            "option": {
              "description": "Specify the select option(s) that only are allowed for the referenced\nadvanced special ability; others are disallowed.",
              "type": "array",
              "items": {
                "$ref": "./_Identifier.schema.json#/definitions/AdvancedSpecialAbilityRestrictedOptionIdentifier"
              },
              "minItems": 1
            }
          },
          "required": [
            "tag",
            "id",
            "option"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "OneOf"
            },
            "options": {
              "description": "The possible advanced special abilities.",
              "type": "object",
              "properties": {
                "id": {
                  "description": "The advanced special ability's numeric identifier.",
                  "type": "integer",
                  "minimum": 1
                }
              },
              "required": [
                "id"
              ],
              "additionalProperties": false
            },
            "is_selection_required_on_purchase": {
              "description": "Do have to choose on when buying the special ability? Otherwise the\ndecision can be made later.",
              "type": "boolean"
            },
            "option": {
              "description": "Specify the select option(s) that only are allowed for the referenced\nadvanced special ability; others are disallowed.",
              "type": "array",
              "items": {
                "$ref": "./_Identifier.schema.json#/definitions/AdvancedSpecialAbilityRestrictedOptionIdentifier"
              },
              "minItems": 1
            },
            "display_option": {
              "$ref": "./prerequisites/DisplayOption.schema.json#/definitions/DisplayOption"
            }
          },
          "required": [
            "tag",
            "options",
            "is_selection_required_on_purchase",
            "option"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "DeriveFromExternalOption"
            },
            "external_entry": {
              "description": "The possible advanced special abilities.",
              "$ref": "#/definitions/AdvancedSpecialAbilityDerivedExternalEntryId"
            },
            "mappings": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "from_option": {
                    "description": "The select option's identifier.",
                    "$ref": "#/definitions/AdvancedSpecialAbilityDerivedExternalEntryOptionId"
                  },
                  "to_advanced": {
                    "description": "The advanced special ability's identifier.",
                    "type": "object",
                    "properties": {
                      "id": {
                        "description": "The advanced special ability's numeric identifier.",
                        "type": "integer",
                        "minimum": 1
                      }
                    },
                    "required": [
                      "id"
                    ],
                    "additionalProperties": false
                  }
                },
                "required": [
                  "from_option",
                  "to_advanced"
                ],
                "additionalProperties": false
              },
              "minItems": 0
            },
            "display_option": {
              "$ref": "./prerequisites/DisplayOption.schema.json#/definitions/DisplayOption"
            },
            "is_selection_required_on_purchase": {
              "description": "Do have to choose on when buying the special ability? Otherwise the\ndecision can be made later.",
              "type": "boolean"
            },
            "option": {
              "description": "Specify the select option(s) that only are allowed for the referenced\nadvanced special ability; others are disallowed.",
              "type": "array",
              "items": {
                "$ref": "./_Identifier.schema.json#/definitions/AdvancedSpecialAbilityRestrictedOptionIdentifier"
              },
              "minItems": 1
            }
          },
          "required": [
            "tag",
            "external_entry",
            "mappings",
            "is_selection_required_on_purchase",
            "option"
          ],
          "additionalProperties": false
        }
      ]
    },
    "AdvancedSpecialAbilityDerivedExternalEntryId": {
      "$ref": "./_Identifier.schema.json#/definitions/MagicalTraditionIdentifier"
    },
    "AdvancedSpecialAbilityDerivedExternalEntryOptionId": {
      "$ref": "./_Identifier.schema.json#/definitions/PatronIdentifier"
    },
    "AdvancedSpecialAbilities": {
      "description": "The Advanced Special Abilities for the respective Style Special Ability.\nSometimes, only a specific select option or a set of select options of an\nentry is allowed, which can be modelled by the option property. It can also\nbe that you can choose from a set of special abilities, but then you can't\nspecify an option.",
      "type": "array",
      "items": [
        {
          "$ref": "#/definitions/AdvancedSpecialAbility"
        },
        {
          "$ref": "#/definitions/AdvancedSpecialAbility"
        },
        {
          "$ref": "#/definitions/AdvancedSpecialAbility"
        }
      ],
      "minItems": 3,
      "maxItems": 3,
      "additionalItems": false
    },
    "ApplicableCombatTechniques": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "None"
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "DependingOnCombatStyle"
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "All"
            },
            "restrictions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApplicableAllCombatTechniquesRestriction"
              },
              "minItems": 1
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "AllClose"
            },
            "restrictions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApplicableCloseCombatTechniquesRestriction"
              },
              "minItems": 1
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "AllRanged"
            },
            "restrictions": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ApplicableRangedCombatTechniquesRestriction"
              },
              "minItems": 1
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Specific"
            },
            "list": {
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "$ref": "./_Identifier.schema.json#/definitions/CombatTechniqueIdentifier"
                  },
                  "restrictions": {
                    "type": "array",
                    "items": {
                      "$ref": "#/definitions/ApplicableSpecificCombatTechniquesRestriction"
                    },
                    "minItems": 1
                  }
                },
                "required": [
                  "id"
                ],
                "additionalProperties": false
              },
              "minItems": 1
            }
          },
          "required": [
            "tag",
            "list"
          ],
          "additionalProperties": false
        }
      ]
    },
    "ApplicableAllCombatTechniquesRestriction": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Improvised"
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "PointedBlade"
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Mount"
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Race"
            },
            "id": {
              "description": "The race's numeric identifier.",
              "type": "integer",
              "minimum": 1
            }
          },
          "required": [
            "tag",
            "id"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "ExcludeCombatTechniques"
            },
            "list": {
              "description": "The combat techniques this combat special ability is **not** applicable\nto.",
              "type": "array",
              "items": {
                "$ref": "./_Identifier.schema.json#/definitions/CombatTechniqueIdentifier"
              },
              "minItems": 1,
              "uniqueItems": true
            }
          },
          "required": [
            "tag",
            "list"
          ],
          "additionalProperties": false
        }
      ]
    },
    "ApplicableCloseCombatTechniquesRestriction": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Improvised"
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "PointedBlade"
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Mount"
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "HasParry"
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "OneHanded"
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "ParryingWeapon"
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Race"
            },
            "id": {
              "description": "The race's numeric identifier.",
              "type": "integer",
              "minimum": 1
            }
          },
          "required": [
            "tag",
            "id"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "ExcludeCombatTechniques"
            },
            "list": {
              "description": "The combat techniques this combat special ability is **not** applicable\nto.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "The close combat technique's numeric identifier.",
                    "type": "integer",
                    "minimum": 1
                  }
                },
                "required": [
                  "id"
                ],
                "additionalProperties": false
              },
              "minItems": 1,
              "uniqueItems": true
            }
          },
          "required": [
            "tag",
            "list"
          ],
          "additionalProperties": false
        }
      ]
    },
    "ApplicableRangedCombatTechniquesRestriction": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Improvised"
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "PointedBlade"
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Mount"
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Race"
            },
            "id": {
              "description": "The race's numeric identifier.",
              "type": "integer",
              "minimum": 1
            }
          },
          "required": [
            "tag",
            "id"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "ExcludeCombatTechniques"
            },
            "list": {
              "description": "The combat techniques this combat special ability is **not** applicable\nto.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "The ranged combat technique's numeric identifier.",
                    "type": "integer",
                    "minimum": 1
                  }
                },
                "required": [
                  "id"
                ],
                "additionalProperties": false
              },
              "minItems": 1,
              "uniqueItems": true
            }
          },
          "required": [
            "tag",
            "list"
          ],
          "additionalProperties": false
        }
      ]
    },
    "ApplicableSpecificCombatTechniquesRestriction": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Improvised"
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "PointedBlade"
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Mount"
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Race"
            },
            "id": {
              "description": "The race's numeric identifier.",
              "type": "integer",
              "minimum": 1
            }
          },
          "required": [
            "tag",
            "id"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Level"
            },
            "level": {
              "description": "The combat special ability is only applicable on a certain level.",
              "type": "integer",
              "minimum": 1
            }
          },
          "required": [
            "tag",
            "level"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Weapons"
            },
            "list": {
              "description": "The specific weapons this combat special ability is only applicable to.",
              "type": "array",
              "items": {
                "type": "object",
                "properties": {
                  "id": {
                    "description": "The weapon's numeric identifier.",
                    "type": "integer",
                    "minimum": 1
                  }
                },
                "required": [
                  "id"
                ],
                "additionalProperties": false
              },
              "minItems": 1,
              "uniqueItems": true
            }
          },
          "required": [
            "tag",
            "list"
          ],
          "additionalProperties": false
        }
      ]
    },
    "AdventurePointsValue": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Fixed"
            },
            "value": {
              "description": "A fixed adventure points value. If the entry has levels, this is the cost\nfor each level as well.",
              "$ref": "#/definitions/AdventurePointsSingleValue"
            }
          },
          "required": [
            "tag",
            "value"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "ByLevel"
            },
            "values": {
              "description": "An entry with levels may have different costs for each level. The length\nof the list must match the amount of levels the special ability has.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdventurePointsSingleValue"
              },
              "minItems": 2
            }
          },
          "required": [
            "tag",
            "values"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "description": "Used if AP value is defined by the selected option(s) or special rules.",
              "const": "Indefinite"
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        }
      ]
    },
    "AdventurePointsValueAdvantagesDisadvantages": {
      "oneOf": [
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "Fixed"
            },
            "value": {
              "description": "A fixed adventure points value. If the entry has levels, this is the cost\nfor each level as well.",
              "$ref": "#/definitions/AdventurePointsSingleValue"
            },
            "does_not_contribute_to_maximum": {
              "description": "The AP Value of the entry does not contribute to the AP maximum for\nadvantages or disadvantages, so it may also be bought if the maximum has\nalready been reached.",
              "const": true
            }
          },
          "required": [
            "tag",
            "value"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "const": "ByLevel"
            },
            "values": {
              "description": "An entry with levels may have different costs for each level. The length\nof the list must match the amount of levels the special ability has.",
              "type": "array",
              "items": {
                "$ref": "#/definitions/AdventurePointsSingleValue"
              },
              "minItems": 2
            },
            "does_not_contribute_to_maximum": {
              "description": "The AP Value of the entry does not contribute to the AP maximum for\nadvantages or disadvantages, so it may also be bought if the maximum has\nalready been reached.",
              "const": true
            }
          },
          "required": [
            "tag",
            "values"
          ],
          "additionalProperties": false
        },
        {
          "type": "object",
          "properties": {
            "tag": {
              "description": "Used if AP value is defined by the selected option(s) or special rules.",
              "const": "Indefinite"
            },
            "does_not_contribute_to_maximum": {
              "description": "The AP Value of the entry does not contribute to the AP maximum for\nadvantages or disadvantages, so it may also be bought if the maximum has\nalready been reached.",
              "const": true
            }
          },
          "required": [
            "tag"
          ],
          "additionalProperties": false
        }
      ]
    },
    "AdventurePointsSingleValue": {
      "description": "A single adventure points value.",
      "type": "integer",
      "minimum": 0
    }
  }
}
